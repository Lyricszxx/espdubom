local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = game.Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Configurações da assistência de mira
local aimSmoothness = 0.3 -- Quão suave a mira deve ser (menor é mais rápido)
local aimRadius = 40 -- Distância da câmera para considerar um alvo para o aim assist
local aimAssistEnabled = true -- Sempre ativado

-- Função para verificar se o jogador está vivo
local function IsAlive(player)
    return player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0
end

-- Função para obter o alvo mais próximo da mira do jogador
local function GetClosestPlayerToCrosshair()
    local closestPlayer = nil
    local shortestDistance = aimRadius

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and IsAlive(player) then
            local head = player.Character:FindFirstChild("Head")
            if head then
                local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                if onScreen then
                    -- Para mobile, usamos o centro da tela como referência
                    local screenCenter = Camera.ViewportSize / 2
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude

                    if distance < shortestDistance then
                        closestPlayer = player
                        shortestDistance = distance
                    end
                end
            end
        end
    end

    return closestPlayer
end

-- Função para ajustar a mira suavemente para a cabeça do alvo
local function AimAtTarget(target)
    if target and target.Character and target.Character:FindFirstChild("Head") then
        local headPosition = target.Character.Head.Position
        local cameraPosition = Camera.CFrame.Position

        -- Calcular a direção da cabeça do inimigo
        local directionToHead = (headPosition - cameraPosition).unit

        -- Calcular a nova CFrame da câmera, suavizando o movimento
        local targetCFrame = CFrame.new(cameraPosition, cameraPosition + directionToHead)
        Camera.CFrame = Camera.CFrame:Lerp(targetCFrame, aimSmoothness)
    end
end

-- Verifica continuamente a posição da câmera e ajusta a mira para mobile
RunService.RenderStepped:Connect(function()
    if aimAssistEnabled then
        local closestPlayer = GetClosestPlayerToCrosshair()
        AimAtTarget(closestPlayer)
    end
end)
